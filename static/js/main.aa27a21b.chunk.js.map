{"version":3,"sources":["utils/getRpcUrl.ts","contexts/Localisation/translationsContext.ts","components/Tags.tsx","state/farms/fetchFarms.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","components/layout/Container.tsx","components/layout/Page.tsx","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","contexts/RefreshContext.tsx","contexts/ThemeContext.tsx","hooks/useRefresh.ts","config/constants/index.ts","config/index.ts","components/UnlockButton.tsx","hooks/useHarvest.ts","config/constants/types.ts","utils/translateTextHelpers.ts","hooks/useI18n.ts","hooks/useTheme.ts","components/layout/Flex.tsx","hooks/useApprove.ts","hooks/useStake.ts","hooks/useUnstake.ts","state/actions.ts","utils/multicall.ts","utils/callHelpers.ts","hooks/useWeb3.ts","hooks/useContract.ts","utils/addressHelpers.ts","config/constants/pools.ts","utils/formatBalance.ts","config/constants/farms.ts","config/constants/contracts.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/index.ts","style/Global.tsx","config/localisation/languageCodes.ts","contexts/Localisation/languageContext.tsx","components/Menu/config.ts","components/Menu/index.tsx","components/PageLoader.tsx","contexts/BlockContext.tsx","hooks/useBlock.ts","views/Pools/components/Card.tsx","views/Pools/components/CardTitle.tsx","views/Pools/components/Coming.tsx","components/Label/Label.tsx","components/Balance.tsx","views/Pools/components/DepositModal.tsx","views/Pools/components/WithdrawModal.tsx","views/Pools/components/CompoundModal.tsx","views/Pools/components/OldSyrupTitle.tsx","views/Pools/components/HarvestButton.tsx","views/Pools/components/CardFooter.tsx","views/Pools/components/PoolCard.tsx","views/Pools/components/PoolTabButtons/index.tsx","views/Pools/components/Divider.tsx","views/Pools/Syrup.tsx","App.tsx","state/index.ts","Providers.tsx","index.tsx","state/hooks.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","utils/web3.ts"],"names":["nodes","process","getNodeUrl","randomIndex","random","length","defaultTranslationState","translations","setTranslations","TranslationsContext","createContext","Tag","styled","NTag","CoreTag","variant","outline","startIcon","CommunityTag","BinanceTag","fetchFarms","a","Promise","all","farmsConfig","map","farmConfig","lpAdress","lpAddresses","CHAIN_ID","calls","address","tokenAddresses","name","params","quoteTokenAdresses","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBlanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","lpTokenRatio","BigNumber","div","lpTotalInQuoteToken","pow","times","tokenAmount","quoteTokenAmount","masterchefABI","pid","info","totalAllocPoint","allocPoint","_hex","poolWeight","toJSON","tokenPriceVsQuote","multiplier","toString","data","fetchFarmUserAllowances","account","masterChefAdress","farm","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","initialState","farmsSlice","createSlice","reducers","setFarmsPublicData","state","action","liveFarmsData","payload","liveFarmData","find","f","setFarmUserData","arrayOfUserDataObjects","forEach","userDataEl","index","userData","actions","fetchFarmsPublicDataAsync","dispatch","farms","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","allowance","Container","theme","mediaQueries","sm","Page","lg","StyledInputWrapper","props","colors","input","radii","default","spacing","StyledInput","primary","Input","endAdornment","onChange","placeholder","startAdornment","value","StyledTokenInput","StyledSpacer","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TokenInput","max","symbol","onSelectMax","TranslateString","useI18n","toLocaleString","size","onClick","RefreshContext","React","slow","fast","RefreshContextProvider","children","useState","setSlow","setFast","useEffect","interval","setInterval","prev","clearInterval","Provider","CACHE_KEY","ThemeContext","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","localStorage","getItem","JSON","parse","setIsDark","prevState","setItem","stringify","dark","light","useRefresh","useContext","fastRefresh","slowRefresh","communityFarms","filter","isCommunity","tokenSymbol","config","EXPONENTIAL_AT","DECIMAL_PLACES","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","CAKE_POOL_PID","UnlockButton","useWallet","connect","reset","onPresentConnectModal","useWalletModal","style","backgroundColor","borderRadius","useHarvest","farmPid","useDispatch","masterChefContract","useMasterchef","onReward","useCallback","harvest","txHash","useAllHarvest","farmPids","harvestPromises","reduce","accum","useSousHarvest","sousId","isUsingBnb","sousChefContract","useSousChef","handleHarvest","soushHarvestBnb","soushHarvest","updateUserPendingReward","updateUserBalance","QuoteToken","PoolCategory","variableRegex","getTranslation","translationId","fallback","foundTranslation","translation","stringId","translatedString","text","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","useTheme","StyledThemeCopntext","FlexLayout","useApprove","lpContract","onApprove","approve","tx","useSousApprove","updateUserAllowance","useSousStake","handleStake","_amount","n2","Math","floor","parseFloat","amount1","String","toFixed","amount","console","log","stake","sousStakeBnb","sousStake","updateUserStakedBalance","onStake","useStake","SYRUPIDS","useSousUnstake","isOldSyrup","onUnstake","unstake","sousEmegencyUnstake","sousUnstake","useUnstake","abi","web3","getWeb3","multi","eth","Contract","MultiCallAbi","getMulticallAddress","itf","Interface","calldata","call","toLowerCase","encodeFunctionData","methods","aggregate","returnData","res","i","decodeFunctionResult","options","ethers","constants","MaxUint256","send","from","enterStaking","gas","on","transactionHash","deposit","leaveStaking","withdraw","emergencyWithdraw","RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","useWeb3","ethereum","refEth","useRef","setweb3","current","useContract","contractOptions","contract","setContract","useERC20","masterChef","id","poolsConfig","pool","rawAbi","poolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","getCakeAddress","addresses","cake","chainId","mulltiCall","getWbnbAddress","wbnb","pools","tokenName","tokenEarned","stakingTokenName","CAKE","stakingTokenAddress","milkshakeAddress","97","56","CORE","projectLink","tokenPerBlock","sortOrder","isFinished","getBalanceNumber","balance","decimals","displayBalance","dividedBy","toNumber","getFullDisplayBalance","lpSymbol","quoteTokenSymbol","BNB","contracts","BUSD","busd","syrup","ust","fetchPoolsBlockLimits","poolsWithEnd","p","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","startBlock","endBlock","fetchPoolsTotalStatking","nonBnbPools","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","totalStaked","fetchPoolsBalance","Boolean","callsBalance","balances","milkshakeBalance","bnbPools","nonMasterPools","masterChefABI","fetchPoolsAllowance","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","masterPoolAmount","0","fetchUserPendingRewards","pendingRewards","pendingToken","pendingReward","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","field","findIndex","fetchPoolsPublicDataAsync","blockLimits","totalStakings","liveData","blockLimit","totalStaking","fetchPoolsUserDataAsync","stakingTokenBalances","stakingTokenBalance","GlobalStyle","createGlobalStyle","background","EN","code","language","allLanguages","LanguageContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","projectId","parseInt","REACT_APP_CROWDIN_PROJECTID","stringTranslationsApi","StringTranslations","token","REACT_APP_CROWDIN_APIKEY","LanguageContextProvider","storedLangCode","storedLang","getStoredLang","listLanguageTranslations","undefined","fetchTranslationsForSelectedLanguage","then","translationApiResponse","catch","langObject","label","icon","href","items","Menu","cakePriceUsd","usePriceCakeBusd","login","logout","currentLang","langs","setLang","links","Wrapper","PageLoader","src","alt","width","height","BlockContext","BlockContextProvider","previousBlock","block","setBlock","getBlockNumber","blockNumber","useBlock","Card","card","isActive","CardTitle","Balance","Label","textSubtle","DetailPlaceholder","Value","Footer","Coming","padding","role","aria-label","as","external","fullWidth","mb","flex","StyledLabel","StyledText","Text","isDisabled","color","textDisabled","fontSize","unit","previousValue","bold","start","end","duration","separator","defaultProps","DepositModal","onConfirm","onDismiss","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","handleChange","e","currentTarget","handleSelectMax","title","ModalActions","disabled","WithdrawModal","CompoundModal","BalanceRow","Number","Title","ActionLink","OldSyrupTitle","hasBalance","target","StyledButton","button","StyledLink","Link","StyledExternalLink","Button","buttonSize","buttonPadding","to","buttonColor","ButtonChild","boxShadow","tags","COMMUNITY","StyledFooter","StyledDetailsButton","Details","Row","FlexFull","TokenLink","CardFooter","blocksRemaining","blocksUntilStart","isOpen","setIsOpen","Icon","ChevronUp","ChevronDown","marginBottom","memo","Spin","keyframes","RotateImage","img","PoolFinishedSash","StyledCardActions","BalanceAndCompound","StyledActionSpacer","StyledDetails","PoolCard","image","apy","stakingLimit","isBnbPool","stakingTokenContract","requestedApproval","setRequestedApproval","SYRUP","accountHasStakedBalance","needsApproval","isCardActive","convertedLimit","multipliedBy","useModal","isGreaterThan","onPresentDeposit","onPresentCompound","onPresentWithdraw","handleApprove","error","display","alignItems","position","HarvestButton","gt","eq","isNaN","isFinite","PoolTabButtons","useRouteMatch","url","isExact","activeIndex","Hero","Farm","path","useFarms","usePools","bnbPriceUSD","usePriceBnbBusd","poolsWithApy","rewardTokenFarm","stakingTokenFarm","s","stakingTokenPriceInBNB","totalRewardPricePerYear","tokenPrice","quoteToken","tokenPriceBN","priceToBnb","totalStakingTokenInPool","partition","finishedPools","openPools","textAlign","mt","Flex","exact","orderBy","Divider","Home","lazy","Farms","NotFound","App","window","useFetchPublicData","Global","component","configureStore","devTools","reducer","farmsReducer","poolsReducer","Providers","rpcUrl","store","connectors","walletconnect","bsc","ReactDOM","render","StrictMode","document","getElementById","ZERO","useSelector","useFarmFromPid","useFarmFromSymbol","useFarmUser","Spacer","StyledModalActions","primaryDark","StyledModalAction","l","Children","toArray","child","getContract"],"mappings":"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","file":"static/js/main.aa27a21b.chunk.js","sourcesContent":["import random from 'lodash/random'\n\n// Array of available nodes to connect to\nconst nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","import React, { createContext } from 'react'\n\nexport interface TranslationState {\n  translations: Array<any>\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\n}\n\nconst defaultTranslationState: TranslationState = {\n  translations: [],\n  setTranslations: (): void => undefined,\n}\n\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\n","import React from 'react'\nimport { Tag as NTag, VerifiedIcon, CommunityIcon, BinanceIcon } from '@pancakeswap-libs/uikit'\nimport styled from 'styled-components'\n\nconst Tag = styled(NTag)`\n  border-radius: 6px;\n`\n\nconst CoreTag = () => (\n  <Tag variant=\"primary\" outline startIcon={<VerifiedIcon />}>\n    Core\n  </Tag>\n)\n\nconst CommunityTag = () => (\n  <Tag variant=\"textSubtle\" outline startIcon={<CommunityIcon />}>\n    Community\n  </Tag>\n)\n\nconst BinanceTag = () => (\n  <Tag variant=\"binance\" outline startIcon={<BinanceIcon />}>\n    Binance\n  </Tag>\n)\n\nexport { CoreTag, CommunityTag, BinanceTag }\n","import BigNumber from 'bignumber.js'\nimport erc20 from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport farmsConfig from 'config/constants/farms'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nconst fetchFarms = async () => {\n  const data = await Promise.all(\n    farmsConfig.map(async (farmConfig) => {\n      const lpAdress = farmConfig.lpAddresses[CHAIN_ID]\n      const calls = [\n        // Balance of token in the LP contract\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of quote token on LP contract\n        {\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of LP tokens in the master chef contract\n        {\n          address: lpAdress,\n          name: 'balanceOf',\n          params: [getMasterChefAddress()],\n        },\n        // Total supply of LP tokens\n        {\n          address: lpAdress,\n          name: 'totalSupply',\n        },\n        // Token decimals\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: 'decimals',\n        },\n        // Quote token decimals\n        {\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n          name: 'decimals',\n        },\n      ]\n\n      const [\n        tokenBalanceLP,\n        quoteTokenBlanceLP,\n        lpTokenBalanceMC,\n        lpTotalSupply,\n        tokenDecimals,\n        quoteTokenDecimals,\n      ] = await multicall(erc20, calls)\n\n      // Ratio in % a LP tokens that are in staking, vs the total number in circulation\n      const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n      // Total value in staking in quote token value\n      const lpTotalInQuoteToken = new BigNumber(quoteTokenBlanceLP)\n        .div(new BigNumber(10).pow(18))\n        .times(new BigNumber(2))\n        .times(lpTokenRatio)\n\n      // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\n      const tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)).times(lpTokenRatio)\n      const quoteTokenAmount = new BigNumber(quoteTokenBlanceLP)\n        .div(new BigNumber(10).pow(quoteTokenDecimals))\n        .times(lpTokenRatio)\n\n      const [info, totalAllocPoint] = await multicall(masterchefABI, [\n        {\n          address: getMasterChefAddress(),\n          name: 'poolInfo',\n          params: [farmConfig.pid],\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'totalAllocPoint',\n        },\n      ])\n\n      const allocPoint = new BigNumber(info.allocPoint._hex)\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\n\n      return {\n        ...farmConfig,\n        tokenAmount: tokenAmount.toJSON(),\n        quoteTokenAmount: quoteTokenAmount.toJSON(),\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n        tokenPriceVsQuote: quoteTokenAmount.div(tokenAmount).toJSON(),\n        poolWeight: poolWeight.toJSON(),\n        multiplier: `${allocPoint.div(100).toString()}X`,\n      }\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport farmsConfig from 'config/constants/farms'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nexport const fetchFarmUserAllowances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.lpAddresses[CHAIN_ID]\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAdress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string) => {\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.lpAddresses[CHAIN_ID]\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'pendingToken',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport fetchFarms from './fetchFarms'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst initialState: FarmsState = { data: [...farmsConfig] }\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setFarmsPublicData: (state, action) => {\n      const liveFarmsData: Farm[] = action.payload\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setFarmUserData: (state, action) => {\n      const { arrayOfUserDataObjects } = action.payload\n      arrayOfUserDataObjects.forEach((userDataEl) => {\n        const { index } = userDataEl\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n    },\n  },\n})\n\n// Actions\nexport const { setFarmsPublicData, setFarmUserData } = farmsSlice.actions\n\n// Thunks\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\n  const farms = await fetchFarms()\n  dispatch(setFarmsPublicData(farms))\n}\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\n  const userFarmAllowances = await fetchFarmUserAllowances(account)\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\n  const userFarmEarnings = await fetchFarmUserEarnings(account)\n\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\n    return {\n      index,\n      allowance: userFarmAllowances[index],\n      tokenBalance: userFarmTokenBalances[index],\n      stakedBalance: userStakedBalances[index],\n      earnings: userFarmEarnings[index],\n    }\n  })\n\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\n}\n\nexport default farmsSlice.reducer\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 992px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","import styled from 'styled-components'\nimport Container from './Container'\n\nconst Page = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nexport default Page\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap-libs/uikit'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value }) => {\n  const TranslateString = useI18n()\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TokenInput\n","import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@pancakeswap-libs/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : true\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import farmsConfig from './farms'\n\nconst communityFarms = farmsConfig.filter((farm) => farm.isCommunity).map((farm) => farm.tokenSymbol)\n\nexport { farmsConfig, communityFarms }\nexport { default as poolsConfig } from './pools'\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const CAKE_PER_BLOCK = new BigNumber(1)\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\nexport const BLOCKS_PER_MONTH = new BigNumber(350400)\nexport const BSC_BLOCK_TIME = 3\n\nexport const CAKE_POOL_PID = 1\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { connect, reset } = useWallet()\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\n\n  return (\n    <Button style={{ backgroundColor: '#850085', borderRadius: 6 }} onClick={onPresentConnectModal} {...props}>\n      {TranslateString(292, 'Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nexport const useHarvest = (farmPid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    dispatch(fetchFarmUserDataAsync(account))\n    return txHash\n  }, [account, dispatch, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useAllHarvest = (farmPids: number[]) => {\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const harvestPromises = farmPids.reduce((accum, pid) => {\n      return [...accum, harvest(masterChefContract, pid, account)]\n    }, [])\n\n    return Promise.all(harvestPromises)\n  }, [account, farmPids, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvest(masterChefContract, 0, account)\n    } else if (isUsingBnb) {\n      await soushHarvestBnb(sousChefContract, account)\n    } else {\n      await soushHarvest(sousChefContract, account)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n","export type IfoStatus = 'coming_soon' | 'live' | 'finished'\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  subTitle?: string\n  description?: string\n  launchDate: string\n  launchTime: string\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  projectSiteUrl: string\n  currency: string\n  currencyAddress: string\n  tokenDecimals: number\n  releaseBlockNumber: number\n}\n\nexport enum QuoteToken {\n  'BNB' = 'BNB',\n  'CAKE' = 'ICE',\n  'GLTO' = 'GLTO',\n  'SYRUP' = 'VanillaIce',\n  'VanillaIce' = 'VanillaIce',\n  'BUSD' = 'BUSD',\n  'UST' = 'USDT',\n  'DAI' = 'DAI',\n  'USDC' = 'USDC'\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n}\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  tokenSymbol: string\n  tokenAddresses: Address\n  quoteTokenSymbol: QuoteToken\n  quoteTokenAdresses: Address\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  image?: string\n  tokenName: string\n  tokenEarned: string\n  stakingTokenName: QuoteToken\n  stakingLimit?: number\n  stakingTokenAddress?: string\n  milkshakeAddress?: string\n  contractAddress: Address\n  poolCategory: PoolCategory\n  projectLink: string\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  tokenDecimals: number\n}\n\nexport type Nft = {\n  name: string\n  description: string\n  originalImage: string\n  previewImage: string\n  blurImage: string\n  sortOrder: number\n  bunnyId: number\n}\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\nconst variableRegex = /%(.*?)%/\n\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\n  const fallbackValueAtIndex = fallback.split(' ')[0]\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\n}\n\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\n  const foundTranslation = translations.find((translation) => {\n    return translation.data.stringId === translationId\n  })\n  if (foundTranslation) {\n    const translatedString = foundTranslation.data.text\n    const includesVariable = translatedString.includes('%')\n    if (includesVariable) {\n      return replaceDynamicString(translatedString, fallback)\n    }\n    return translatedString\n  }\n  return fallback\n}\n\n// TODO: Replace instances where this is called directly with the \"useI18n\" hook.\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\n// @see https://reactjs.org/docs/hooks-rules.html\nexport const TranslateString = (translationId: number, fallback: string) => {\n  const { translations } = useContext(TranslationsContext)\n  if (translations[0] === 'error') {\n    return fallback\n  }\n  if (translations.length > 0) {\n    return getTranslation(translations, translationId, fallback)\n  }\n  return fallback\n}\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\nimport { getTranslation } from '../utils/translateTextHelpers'\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string) => {\n    if (translations[0] === 'error') {\n      return fallback\n    }\n    if (translations.length > 0) {\n      return getTranslation(translations, translationId, fallback)\n    }\n    return fallback\n  }\n}\n\nexport default useI18n\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeCopntext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeCopntext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { useMasterchef, useSousChef } from './useContract'\n\n\nconst useStake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (_amount: string) => {\n      const n2 = Math.floor( parseFloat(_amount.toString()) * 1000) / 1000;\n      const amount1 = parseFloat( String(n2) ).toFixed(18);\n      const amount = new BigNumber(amount1).toString();\n      console.log('sousId', _amount, n2, amount1, amount);\n      if (sousId === 0) {\n        await stake(masterChefContract, 0, amount, account)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount, account)\n      } else {\n        await sousStake(sousChefContract, amount, account)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport {\n  fetchFarmUserDataAsync,\n  updateUserStakedBalance,\n  updateUserBalance,\n  updateUserPendingReward,\n} from 'state/actions'\nimport { unstake, sousUnstake, sousEmegencyUnstake } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nconst SYRUPIDS = []\n\nexport const useSousUnstake = (sousId) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n  const isOldSyrup = SYRUPIDS.includes(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      if (sousId === 0) {\n        const txHash = await unstake(masterChefContract, 0, amount, account)\n\n      } else if (isOldSyrup) {\n        const txHash = await sousEmegencyUnstake(sousChefContract, amount, account)\n\n      } else {\n        const txHash = await sousUnstake(sousChefContract, amount, account)\n\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, isOldSyrup, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\nexport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  updateUserAllowance,\n  updateUserBalance,\n  updateUserPendingReward,\n  updateUserStakedBalance,\n} from './pools'\n","import { AbiItem } from 'web3-utils'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3 } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (exemple: balanceOf)\n  params?: any[] // Function params\n}\n\nconst multicall = async (abi: any[], calls: Call[]) => {\n  const web3 = getWeb3()\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const { returnData } = await multi.methods.aggregate(calldata).call()\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n  return res\n}\n\nexport default multicall\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .enterStaking(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n      .send({ from: account, gas: 400000 })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account, gas: 400000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, account) => {\n  // console.log('sousStake', sousChefContract._address, amount);\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n      .send({ from: account, gas: 400000 })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account, gas: 400000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking('0')\n      .send({ from: account, gas: 400000 })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account, gas: 400000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(0) })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { provider as ProviderType } from 'web3-core'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the ethereum provider change\n */\nconst useWeb3 = () => {\n  const { ethereum }: { ethereum: ProviderType } = useWallet()\n  const refEth = useRef(ethereum)\n  const [web3, setweb3] = useState(new Web3(ethereum || httpProvider))\n\n  useEffect(() => {\n    if (ethereum !== refEth.current) {\n      setweb3(new Web3(ethereum || httpProvider))\n      refEth.current = ethereum\n    }\n  }, [ethereum])\n\n  return web3\n}\n\nexport default useWeb3\n","import { useEffect, useState } from 'react'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport useWeb3 from 'hooks/useWeb3'\nimport { getMasterChefAddress, getCakeAddress } from 'utils/addressHelpers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\nimport ifo from 'config/abi/ifo.json'\nimport erc20 from 'config/abi/erc20.json'\nimport rabbitmintingfarm from 'config/abi/rabbitmintingfarm.json'\nimport pancakeRabbits from 'config/abi/pancakeRabbits.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\n\nconst useContract = (abi: AbiItem, address: string, contractOptions?: ContractOptions) => {\n  const web3 = useWeb3()\n  const [contract, setContract] = useState(new web3.eth.Contract(abi, address, contractOptions))\n\n  useEffect(() => {\n    setContract(new web3.eth.Contract(abi, address, contractOptions))\n  }, [abi, address, contractOptions, web3])\n\n  return contract\n}\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoContract = (address: string) => {\n  const ifoAbi = (ifo as unknown) as AbiItem\n  return useContract(ifoAbi, address)\n}\n\nexport const useERC20 = (address: string) => {\n  const erc20Abi = (erc20 as unknown) as AbiItem\n  return useContract(erc20Abi, address)\n}\n\nexport const useCake = () => {\n  return useERC20(getCakeAddress())\n}\n\nexport const useRabbitMintingFarm = (address: string) => {\n  const rabbitMintingFarmAbi = (rabbitmintingfarm as unknown) as AbiItem\n  return useContract(rabbitMintingFarmAbi, address)\n}\n\nexport const usePancakeRabbits = (address: string) => {\n  const pancakeRabbitsAbi = (pancakeRabbits as unknown) as AbiItem\n  return useContract(pancakeRabbitsAbi, address)\n}\n\nexport const useMasterchef = () => {\n  const abi = (masterChef as unknown) as AbiItem\n  return useContract(abi, getMasterChefAddress())\n}\n\nexport const useSousChef = (id) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const rawAbi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  const abi = (rawAbi as unknown) as AbiItem\n  return useContract(abi, config.contractAddress[process.env.REACT_APP_CHAIN_ID])\n}\n\nexport default useContract\n","import addresses from 'config/constants/contracts'\n\nconst chainId = process.env.REACT_APP_CHAIN_ID\n\nexport const getCakeAddress = () => {\n  return addresses.cake[chainId]\n}\nexport const getSyrupAddress = () => {\n  return addresses.syrup[chainId]\n}\nexport const getMasterChefAddress = () => {\n  return addresses.masterChef[chainId]\n}\nexport const getMulticallAddress = () => {\n  return addresses.mulltiCall[chainId]\n}\nexport const getWbnbAddress = () => {\n  return addresses.wbnb[chainId]\n}\n","import { PoolConfig, QuoteToken, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 0,\n    tokenName: 'ICE',\n    tokenEarned: 'ICE',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0x4141a2741697dDEc7eB3B8fDd085c18Fe91367A1', // cake/Vanilla\n    milkshakeAddress: '0x1140A764DFB67821dFa3f9C65B44818a2ce781D7',\n    contractAddress: {\n      97: '0xc64DdC9C5301523d60906fF75555D628e7518F13',\n      56: '0xc64DdC9C5301523d60906fF75555D628e7518F13', // MasterChef\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://icecreamswap.finance/',\n    harvest: true,\n    tokenPerBlock: '1',\n    sortOrder: 1,\n    isFinished: false,\n    tokenDecimals: 18,\n  }\n]\n\nexport default pools\n","import BigNumber from 'bignumber.js'\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n","import contracts from './contracts'\nimport { FarmConfig, QuoteToken } from './types'\n\nconst farms: FarmConfig[] = [\n  {\n    pid: 0,\n    lpSymbol: 'ICE',\n    lpAddresses: {\n      97: '0x4141a2741697dDEc7eB3B8fDd085c18Fe91367A1',\n      56: '0x4141a2741697dDEc7eB3B8fDd085c18Fe91367A1',\n    },\n    tokenSymbol: 'ICE',\n    tokenAddresses: {\n      97: '0x4141a2741697dDEc7eB3B8fDd085c18Fe91367A1',\n      56: '0x4141a2741697dDEc7eB3B8fDd085c18Fe91367A1',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 1,\n    lpSymbol: 'ICE-BNB ICLP',\n    lpAddresses: {\n      97: '0x39ad45f07d3f4Ed0eB7dC287d97fac8f42185aEA', // iCLP\n      56: '0x39ad45f07d3f4Ed0eB7dC287d97fac8f42185aEA',\n    },\n    tokenSymbol: 'ICE',\n    tokenAddresses: {\n      97: '0x4141a2741697dDEc7eB3B8fDd085c18Fe91367A1',\n      56: '0x4141a2741697dDEc7eB3B8fDd085c18Fe91367A1',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 2,\n    lpSymbol: 'ICE-BUSD ICLP',\n    lpAddresses: {\n      97: '0x59b778B183fC4DA0ECE4a6440ca1E390A063AEfC', // iCLP\n      56: '0x59b778B183fC4DA0ECE4a6440ca1E390A063AEfC',\n    },\n    tokenSymbol: 'ICE',\n    tokenAddresses: {\n      97: '0x4141a2741697dDEc7eB3B8fDd085c18Fe91367A1',\n      56: '0x4141a2741697dDEc7eB3B8fDd085c18Fe91367A1',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n\n  {\n    pid: 3,\n    lpSymbol: 'BUSD-BNB ICLP',\n    lpAddresses: {\n      97: '0xdfaf4aF334AB85d43500b4E7edfA570c307b79D9', // iCLP\n      56: '0xdfaf4aF334AB85d43500b4E7edfA570c307b79D9',\n    },\n    tokenSymbol: 'ICE',\n    tokenAddresses: {\n      97: '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 4,\n    lpSymbol: 'GLTO Migration',\n    lpAddresses: {\n      97: '0x8212b85822f0713C52e7277C4D056A68B3722a8a', // GLTO\n      56: '0x8212b85822f0713C52e7277C4D056A68B3722a8a',\n    },\n    tokenSymbol: 'ICE',\n    tokenAddresses: {\n      97: '0x4141a2741697dDEc7eB3B8fDd085c18Fe91367A1',\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n]\nexport default farms\n","export default {\n  cake: {\n    97: '0x4141a2741697dDEc7eB3B8fDd085c18Fe91367A1',\n    56: '0x4141a2741697dDEc7eB3B8fDd085c18Fe91367A1',\n  },\n  syrup: {\n    97: '0x1140A764DFB67821dFa3f9C65B44818a2ce781D7',\n    56: '0x1140A764DFB67821dFa3f9C65B44818a2ce781D7',\n  },\n  masterChef: {\n    97: '0xc64DdC9C5301523d60906fF75555D628e7518F13',\n    56: '0xc64DdC9C5301523d60906fF75555D628e7518F13',\n  },\n  sousChef: {\n    97: '0x73C522A54941a2222c01C1032c5ABD225D3A132E',\n    56: '0x73C522A54941a2222c01C1032c5ABD225D3A132E',\n  },\n  wbnb: {\n    97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n  },\n  mulltiCall: {\n    56: '0x1ee38d535d541c55c9dae27b12edf090c608e6fb',\n    97: '0x67ADCB4dF3931b0C5Da724058ADC2174a9844412',\n  },\n  busd: {\n    56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    97: '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\n  },\n  ust: {\n    56: '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n    97: '',\n  },\n}\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport { QuoteToken } from 'config/constants/types'\nimport multicall from 'utils/multicall'\nimport { getWbnbAddress } from 'utils/addressHelpers'\nimport BigNumber from 'bignumber.js'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: poolConfig.contractAddress[CHAIN_ID],\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: poolConfig.contractAddress[CHAIN_ID],\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStatking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\n  const bnbPool = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: poolConfig.stakingTokenAddress,\n      name: 'balanceOf',\n      params: [poolConfig.contractAddress[CHAIN_ID]],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [poolConfig.contractAddress[CHAIN_ID]],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolsBalance = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB && Boolean(p.milkshakeAddress))\n  // const bnbPool = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\n\n  const callsBalance = nonBnbPools.map((poolConfig) => {\n    return {\n      address: poolConfig.stakingTokenAddress,\n      name: 'balanceOf',\n      params: [poolConfig.milkshakeAddress],\n    }\n  })\n\n  const balances = await multicall(cakeABI, callsBalance)\n\n  return nonBnbPools.map((poolConfig, index) => {\n    return {\n      sousId: poolConfig.sousId,\n      milkshakeBalance: new BigNumber(balances[index]).toJSON(),\n    }\n  })\n}\n","import { AbiItem } from 'web3-utils'\nimport poolsConfig from 'config/constants/pools'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport { QuoteToken } from 'config/constants/types'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport { getWeb3 } from 'utils/web3'\nimport BigNumber from 'bignumber.js'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\nconst bnbPools = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst web3 = getWeb3()\nconst masterChefContract = new web3.eth.Contract((masterChefABI as unknown) as AbiItem, getMasterChefAddress())\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'allowance',\n    params: [account, p.contractAddress[CHAIN_ID]],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await web3.eth.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: 'userInfo',\n    params: [account],\n  }))\n\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.methods.pendingToken('0', account).call()\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport poolsConfig from 'config/constants/pools'\nimport { fetchPoolsBalance, fetchPoolsBlockLimits, fetchPoolsTotalStatking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { PoolsState, Pool } from '../types'\n\nconst initialState: PoolsState = { data: [...poolsConfig] }\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n    },\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStatking()\n  const balances = await fetchPoolsBalance()\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const balance = balances.find((entry) => entry.sousId === pool.sousId)\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      ...balance,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  const stakingTokenBalances = await fetchUserBalances(account)\n  const stakedBalances = await fetchUserStakeBalances(account)\n  const pendingRewards = await fetchUserPendingRewards(account)\n\n  const userData = poolsConfig.map((pool) => ({\n    sousId: pool.sousId,\n    allowance: allowances[pool.sousId],\n    stakingTokenBalance: stakingTokenBalances[pool.sousId],\n    stakedBalance: stakedBalances[pool.sousId],\n    pendingReward: pendingRewards[pool.sousId],\n  }))\n\n  dispatch(setPoolsUserData(userData))\n}\n\nexport const updateUserAllowance = (sousId: string, account: string) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n}\n\nexport const updateUserBalance = (sousId: string, account: string) => async (dispatch) => {\n  const tokenBalances = await fetchUserBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n}\n\nexport const updateUserStakedBalance = (sousId: string, account: string) => async (dispatch) => {\n  const stakedBalances = await fetchUserStakeBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n}\n\nexport const updateUserPendingReward = (sousId: string, account: string) => async (dispatch) => {\n  const pendingRewards = await fetchUserPendingRewards(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n}\n\nexport default PoolsSlice.reducer\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap-libs/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","export const EN = { code: 'en', language: 'English' }\nexport const AR = { code: 'ar', language: 'العربية' }\nexport const CA = { code: 'ca', language: 'Català' }\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\nexport const CS = { code: 'cs', language: 'Čeština' }\nexport const DA = { code: 'da', language: 'Dansk' }\nexport const DE = { code: 'de', language: 'Deutsch' }\nexport const NL = { code: 'nl', language: 'Nederlands' }\nexport const FIL = { code: 'fil', language: 'Filipino' }\nexport const FI = { code: 'fi', language: 'Suomalainen' }\nexport const FR = { code: 'fr', language: 'Français' }\nexport const EL = { code: 'el', language: 'Ελληνικά' }\nexport const HI = { code: 'hi', language: 'हिंदी' }\nexport const HU = { code: 'hu', language: 'Magyar' }\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\nexport const IT = { code: 'it', language: 'Italiano' }\nexport const JA = { code: 'ja', language: '日本語' }\nexport const KO = { code: 'ko', language: '한국어' }\nexport const PTBR = { code: 'pt-BR', language: 'Português' }\nexport const RO = { code: 'ro', language: 'Română' }\nexport const RU = { code: 'ru', language: 'Русский' }\nexport const SR = { code: 'sr', language: 'Српски' }\nexport const ESES = { code: 'es-ES', language: 'Español' }\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\nexport const TA = { code: 'ta', language: 'தமிழ்' }\nexport const TR = { code: 'tr', language: 'Türkçe' }\nexport const UK = { code: 'uk', language: 'Українська' }\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\n\nexport const allLanguages = [\n  EN,\n  AR,\n  CA,\n  ZHCN,\n  ZHTW,\n  CS,\n  DA,\n  DE,\n  NL,\n  FIL,\n  FI,\n  FR,\n  EL,\n  HI,\n  HU,\n  ID,\n  IT,\n  JA,\n  KO,\n  PTBR,\n  RO,\n  RU,\n  SR,\n  ESES,\n  SVSE,\n  TA,\n  TR,\n  UK,\n  VI,\n]\n","import React, { useState, useEffect } from 'react'\nimport { StringTranslations } from '@crowdin/crowdin-api-client'\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\n\nconst CACHE_KEY = 'pancakeSwapLanguage'\n\nexport interface LangType {\n  code: string\n  language: string\n}\n\nexport interface LanguageState {\n  selectedLanguage: LangType\n  setSelectedLanguage: (langObject: LangType) => void\n  translatedLanguage: LangType\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\n}\n\nconst LanguageContext = React.createContext({\n  selectedLanguage: EN,\n  setSelectedLanguage: () => undefined,\n  translatedLanguage: EN,\n  setTranslatedLanguage: () => undefined,\n} as LanguageState)\n\nconst fileId = 8\nconst projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECTID)\nconst stringTranslationsApi = new StringTranslations({\n  token: process.env.REACT_APP_CROWDIN_APIKEY,\n})\n\nconst fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\n  return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\n}\n\nconst LanguageContextProvider = ({ children }) => {\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\n  const [translations, setTranslations] = useState<Array<any>>([])\n\n  const getStoredLang = (storedLangCode: string) => {\n    return allLanguages.filter((language) => {\n      return language.code === storedLangCode\n    })[0]\n  }\n\n  useEffect(() => {\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\n    if (storedLangCode) {\n      const storedLang = getStoredLang(storedLangCode)\n      setSelectedLanguage(storedLang)\n    } else {\n      setSelectedLanguage(EN)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (selectedLanguage) {\n      fetchTranslationsForSelectedLanguage(selectedLanguage)\n        .then((translationApiResponse) => {\n          if (translationApiResponse.data.length < 1) {\n            setTranslations(['error'])\n          } else {\n            setTranslations(translationApiResponse.data)\n          }\n        })\n        .then(() => setTranslatedLanguage(selectedLanguage))\n        .catch(() => {\n          setTranslations(['error'])\n        })\n    }\n  }, [selectedLanguage, setTranslations])\n\n  const handleLanguageSelect = (langObject: LangType) => {\n    setSelectedLanguage(langObject)\n    localStorage.setItem(CACHE_KEY, langObject.code)\n  }\n\n  return (\n    <LanguageContext.Provider\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\n    >\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\n    </LanguageContext.Provider>\n  )\n}\n\nexport { LanguageContext, LanguageContextProvider }\n","import { MenuEntry } from '@pancakeswap-libs/uikit'\n\nconst config: MenuEntry[] = [\n  {\n    label: 'IceCreamFarm',\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: 'IceCreamSwap',\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: 'Exchange',\n        href: 'https://swap-testnet.icecreamswap.finance',\n      },\n      {\n        label: 'Liquidity',\n        href: 'https://swap-testnet.icecreamswap.finance/#/pool',\n      },\n    ],\n  },\n  {\n    label: 'Vanilla Farms',\n    icon: 'FarmIcon',\n    href: '/farms',\n  },\n  {\n    label: 'VanillaIce Pool',\n    icon: 'PoolIcon',\n    href: '/pools',\n  },\n  {\n    label: 'Roadmap & Contact Info',\n    icon: 'MoreIcon',\n    items: [\n      {\n        label: 'Audit',\n        href: 'https://icecreamswap.finance/Vanilla_Audit.pdf',\n      },\n      {\n        label: 'Telegram',\n        href: 'https://t.me/IceCreamSwap',\n      },\n      {\n        label: 'Twitter',\n        href: 'https://twitter.com/SwapIceCream',\n      },\n      {\n        label: 'Github',\n        href: 'https://github.com/icecreamswap',\n      },\n      {\n        label: 'Docs',\n        href: 'https://swapicecream.gitbook.io/icecreamswap-2-0/',\n      },\n      {\n        label: 'FAQ',\n        href: 'https://app.gitbook.com/@swapicecream/s/icecreamswap-2-0/faq',\n      },\n      {\n        label: 'Blog',\n        href: 'https://medium.com/@icecreamswap',\n      },\n      {\n        label: 'Vault',\n        href: 'https://ice-cream-swap.gitbook.io/icecreamswap/roadmap/icecream-vaults',\n      },\n    ],\n  },\n]\n\nexport default config\n","import React, { useContext } from 'react'\nimport { Menu as UikitMenu } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { allLanguages } from 'config/localisation/languageCodes'\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account, connect, reset } = useWallet()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  return (\n    <UikitMenu\n      account={account}\n      login={connect}\n      logout={reset}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={selectedLanguage && selectedLanguage.code}\n      langs={allLanguages}\n      setLang={setSelectedLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@pancakeswap-libs/uikit'\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <img src=\"/images/rec.png\" alt=\"Reload\" width={50} height={50} />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import React, { useState, useEffect, useRef } from 'react'\nimport { getWeb3 } from 'utils/web3'\n\nconst BlockContext = React.createContext(0)\n\nconst BlockContextProvider = ({ children }) => {\n  const previousBlock = useRef(0)\n  const [block, setBlock] = useState(0)\n\n  useEffect(() => {\n    const web3 = getWeb3()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      if (blockNumber !== previousBlock.current) {\n        previousBlock.current = blockNumber\n        setBlock(blockNumber)\n      }\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return <BlockContext.Provider value={block}>{children}</BlockContext.Provider>\n}\n\nexport { BlockContext, BlockContextProvider }\n","import { useContext } from 'react'\nimport { BlockContext } from 'contexts/BlockContext'\n\nconst useBlock = () => {\n  const block: number = useContext(BlockContext)\n  return block\n}\n\nexport default useBlock\n","import styled from 'styled-components'\n\nconst Card = styled.div<{ isActive?: boolean; isFinished?: boolean }>`\n  background: ${(props) => props.theme.card.background};\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  border-radius: 32px;\n  display: flex;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: ${({ isActive }) =>\n    isActive\n      ? '0px 0px 0px 1px #0098A1, 0px 0px 4px 8px rgba(31, 199, 212, 0.4);'\n      : '0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05)'};\n  flex-direction: column;\n  position: relative;\n`\n\nexport default Card\n","import styled from 'styled-components'\n\ninterface StyledTitleProps {\n  isFinished?: boolean\n}\n\nconst CardTitle = styled.div<StyledTitleProps>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'text']};\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.1;\n  margin-bottom: 14px;\n`\n\nexport default CardTitle\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Image, Button } from '@pancakeswap-libs/uikit'\nimport { CommunityTag } from 'components/Tags'\nimport useI18n from 'hooks/useI18n'\nimport Card from './Card'\nimport CardTitle from './CardTitle'\n\nconst Balance = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 40px;\n  font-weight: 600;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n  margin-bottom: 16px;\n`\n\nconst DetailPlaceholder = styled.div`\n  display: flex;\n  font-size: 14px;\n`\nconst Value = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 14px;\n`\n\nconst Footer = styled.div`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  padding: 24px;\n`\nconst Coming: React.FC = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card>\n      <div style={{ padding: '24px' }}>\n        <CardTitle>\n          {TranslateString(414, 'Your Project?')}{' '}\n          <span role=\"img\" aria-label=\"eyes\">\n            👀\n          </span>\n        </CardTitle>\n        <Image src=\"/images/bunny-question.svg\" width={64} height={64} alt=\"Your project here\" />\n        <Balance>???</Balance>\n        <Label>{TranslateString(416, 'Create a pool for your token')}</Label>\n        <Button\n          variant=\"secondary\"\n          as=\"a\"\n          href=\"https://forms.gle/M8XREew9KNRE5BQc7\"\n          external\n          fullWidth\n          mb=\"16px\"\n        >\n          {TranslateString(418, 'Apply Now')}\n        </Button>\n        <DetailPlaceholder>\n          <div style={{ flex: 1 }}>{TranslateString(736, 'APY')}:</div>\n          <Value>??</Value>\n        </DetailPlaceholder>\n        <DetailPlaceholder>\n          <div style={{ flex: 1 }}>\n            <span role=\"img\" aria-label=\"syrup\">\n              🍨{' '}\n            </span>\n            {TranslateString(384, 'Your Stake')}:\n          </div>\n          <Value>??? Vanilla</Value>\n        </DetailPlaceholder>\n      </div>\n      <Footer>\n        <CommunityTag />\n      </Footer>\n    </Card>\n  )\n}\n\nexport default Coming\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface LabelProps {\n  text?: string\n  isFinished?: boolean\n}\n\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\n)\n\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'primary']};\n  font-size: 14px;\n`\n\nexport default Label\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\n\ninterface TextProps {\n  isDisabled?: boolean\n  fontSize?: string\n  color?: string\n}\n\ninterface BalanceProps extends TextProps {\n  value?: number\n  decimals?: number\n  unit?: string\n}\n\nconst StyledText = styled(Text)<TextProps>`\n  color: ${({ isDisabled, color, theme }) => (isDisabled ? theme.colors.textDisabled : color)};\n`\n\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit }) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <StyledText bold color={color} fontSize={fontSize} isDisabled={isDisabled}>\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {value && unit && <span>{unit}</span>}\n    </StyledText>\n  )\n}\n\nBalance.defaultProps = {\n  fontSize: '32px',\n  isDisabled: false,\n  color: 'text',\n  decimals: 3,\n}\n\nexport default Balance\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport React, { useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport Balance from 'components/Balance'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  earnings: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst CompoundModal: React.FC<DepositModalProps> = ({ earnings, onConfirm, onDismiss, tokenName = '' }) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(earnings)\n  }, [earnings])\n\n  return (\n    <Modal\n      title={`${TranslateString(999, 'Compound')} ${TranslateString(330, `${tokenName} Earned`)}`}\n      onDismiss={onDismiss}\n    >\n      <BalanceRow>\n        <Balance value={Number(fullBalance)} />\n      </BalanceRow>\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"compound-cake\"\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(fullBalance)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default CompoundModal\n\nconst BalanceRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport CardTitle from './CardTitle'\n\ninterface Props {\n  hasBalance?: boolean\n}\n\nconst Title = styled.div`\n  color: #ed4b9e;\n  font-size: 24px;\n  font-weight: 600;\n  text-transform: uppercase;\n`\n\nconst ActionLink = styled.a`\n  color: #ed4b9e;\n  font-size: 14px;\n`\n\nconst OldSyrupTitle: React.FC<Props> = ({ hasBalance = false }) => {\n  if (hasBalance) {\n    return (\n      <div>\n        <Title>Action Required</Title>\n        <ActionLink\n          href=\" https://pancakeswap.medium.com/urgent-action-required-changes-to-syrup-pools-70b98d7b2541\"\n          target=\"_blank\"\n        >\n          What do I need to do?\n        </ActionLink>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <CardTitle isFinished>FINISHED</CardTitle>\n    </div>\n  )\n}\n\nexport default OldSyrupTitle\n","import React, { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\nimport { Link } from 'react-router-dom'\n\ninterface ButtonProps {\n  children?: React.ReactNode\n  disabled?: boolean\n  href?: string\n  onClick?: () => void\n  size?: 'sm' | 'md' | 'lg'\n  text?: string\n  to?: string\n  variant?: 'default' | 'secondary' | 'tertiary'\n}\n\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to }) => {\n  const { colors, spacing } = useContext(ThemeContext)\n  const buttonColor = colors.background\n\n  let boxShadow: string\n  let buttonSize: number\n  let buttonPadding: number\n  let fontSize: number\n  switch (size) {\n    case 'sm':\n      buttonPadding = spacing[3]\n      buttonSize = 36\n      fontSize = 14\n      break\n    case 'lg':\n      buttonPadding = spacing[4]\n      buttonSize = 72\n      fontSize = 16\n      break\n    case 'md':\n    default:\n      buttonPadding = spacing[4]\n      buttonSize = 56\n      fontSize = 16\n  }\n\n  const ButtonChild = useMemo(() => {\n    if (to) {\n      return <StyledLink to={to}>{text}</StyledLink>\n    }\n    if (href) {\n      return (\n        <StyledExternalLink href={href} target=\"__blank\">\n          {text}\n        </StyledExternalLink>\n      )\n    }\n    return text\n  }, [href, text, to])\n\n  return (\n    <StyledButton\n      boxShadow={boxShadow}\n      color={buttonColor}\n      disabled={disabled}\n      fontSize={fontSize}\n      onClick={onClick}\n      padding={buttonPadding}\n      size={buttonSize}\n    >\n      {children}\n      {ButtonChild}\n    </StyledButton>\n  )\n}\n\ninterface StyledButtonProps {\n  boxShadow: string\n  color: string\n  disabled?: boolean\n  fontSize: number\n  padding: number\n  size: number\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  background: ${(props) => (!props.disabled ? props.theme.card.background : `#ddd`)};\n  border: 0;\n  border-radius: 12px;\n  color: ${(props) => (!props.disabled ? `#32cad7` : `#acaaaf`)};\n  cursor: pointer;\n  display: flex;\n  font-size: ${(props) => props.fontSize}px;\n  font-weight: 700;\n  height: ${(props) => props.size}px;\n  justify-content: center;\n  outline: none;\n  padding-left: ${(props) => props.padding}px;\n  padding-right: ${(props) => props.padding}px;\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n  width: 100%;\n  border: 2px solid ${(props) => (!props.disabled ? `#33cbd7` : `#eee`)};\n  width: 100px;\n  height: 30px;\n  font-size: 14px;\n  padding: 0px;\n`\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nexport default Button\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport Balance from 'components/Balance'\nimport { CommunityTag, CoreTag, BinanceTag } from 'components/Tags'\nimport { PoolCategory } from 'config/constants/types'\n\nconst tags = {\n  [PoolCategory.BINANCE]: BinanceTag,\n  [PoolCategory.CORE]: CoreTag,\n  [PoolCategory.COMMUNITY]: CommunityTag,\n}\n\ninterface Props {\n  projectLink: string\n  totalStaked: BigNumber\n  blocksRemaining: number\n  isFinished: boolean\n  blocksUntilStart: number\n  poolCategory: PoolCategory\n}\n\nconst StyledFooter = styled.div<{ isFinished: boolean }>`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled2' : 'primary2']};\n  padding: 24px;\n`\n\nconst StyledDetailsButton = styled.button`\n  align-items: center;\n  background-color: transparent;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n  display: inline-flex;\n  font-size: 16px;\n  font-weight: 600;\n  height: 32px;\n  justify-content: center;\n  outline: 0;\n  padding: 0;\n  &:hover {\n    opacity: 0.9;\n  }\n\n  & > svg {\n    margin-left: 4px;\n  }\n`\n\nconst Details = styled.div`\n  margin-top: 24px;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst FlexFull = styled.div`\n  flex: 1;\n`\nconst Label = styled.div`\n  font-size: 14px;\n`\nconst TokenLink = styled.a`\n  font-size: 14px;\n  text-decoration: none;\n  color: #12aab5;\n`\n\nconst CardFooter: React.FC<Props> = ({\n  projectLink,\n  totalStaked,\n  blocksRemaining,\n  isFinished,\n  blocksUntilStart,\n  poolCategory,\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const TranslateString = useI18n()\n  const Icon = isOpen ? ChevronUp : ChevronDown\n\n  const handleClick = () => setIsOpen(!isOpen)\n  const Tag = tags[poolCategory]\n\n  return (\n    <StyledFooter isFinished={isFinished}>\n      <Row>\n        <FlexFull>\n          <Tag />\n        </FlexFull>\n        <StyledDetailsButton onClick={handleClick}>\n          {isOpen ? 'Hide' : 'Details'} <Icon />\n        </StyledDetailsButton>\n      </Row>\n      {isOpen && (\n        <Details>\n          <Row style={{ marginBottom: '4px' }}>\n            <FlexFull>\n              <Label>\n                <span role=\"img\" aria-label=\"syrup\">\n                  🍨{' '}\n                </span>\n                {TranslateString(408, 'Total')}\n              </Label>\n            </FlexFull>\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(totalStaked)} />\n          </Row>\n          {blocksUntilStart > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'Start')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksUntilStart} decimals={0} />\n            </Row>\n          )}\n          {blocksUntilStart === 0 && blocksRemaining > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'End')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksRemaining} decimals={0} />\n            </Row>\n          )}\n          <TokenLink href={projectLink} target=\"_blank\">\n            {TranslateString(412, 'View project site')}\n          </TokenLink>\n        </Details>\n      )}\n    </StyledFooter>\n  )\n}\n\nexport default React.memo(CardFooter)\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useState } from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport { Button, IconButton, useModal, AddIcon, Image } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport UnlockButton from 'components/UnlockButton'\nimport Label from 'components/Label'\nimport { useERC20 } from 'hooks/useContract'\nimport { useSousApprove } from 'hooks/useApprove'\nimport useI18n from 'hooks/useI18n'\nimport { useSousStake } from 'hooks/useStake'\nimport { useSousUnstake } from 'hooks/useUnstake'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useSousHarvest } from 'hooks/useHarvest'\nimport Balance from 'components/Balance'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport DepositModal from './DepositModal'\nimport WithdrawModal from './WithdrawModal'\nimport CompoundModal from './CompoundModal'\nimport CardTitle from './CardTitle'\nimport Card from './Card'\nimport OldSyrupTitle from './OldSyrupTitle'\nimport HarvestButton from './HarvestButton'\nimport CardFooter from './CardFooter'\n\ninterface PoolWithApy extends Pool {\n  apy: BigNumber\n}\n\ninterface HarvestProps {\n  pool: PoolWithApy\n}\n\nconst Spin = keyframes`\n  0% { transform: rotateY(0deg); }\n  100% { transform: rotateY(360deg); }\n`\n\nconst RotateImage = styled.img`\n  animation: ${Spin} 3s linear infinite;\n  position: absolute;\n  width: 20px;\n  height: 20px;\n  bottom: 7px;\n  left: 23px;\n`\n\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\n  const {\n    sousId,\n    image,\n    tokenName,\n    tokenEarned,\n    stakingTokenName,\n    stakingTokenAddress,\n    projectLink,\n    harvest,\n    apy,\n    tokenDecimals,\n    poolCategory,\n    totalStaked,\n    startBlock,\n    endBlock,\n    milkshakeBalance,\n    isFinished,\n    userData,\n    stakingLimit,\n  } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const TranslateString = useI18n()\n  const stakingTokenContract = useERC20(stakingTokenAddress)\n  const { account } = useWallet()\n  const block = useBlock()\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\n  const { onStake } = useSousStake(sousId, isBnbPool)\n  const { onUnstake } = useSousUnstake(sousId)\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\n\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const [pendingTx, setPendingTx] = useState(false)\n\n  const allowance = new BigNumber(userData?.allowance || 0)\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\n  const earnings = new BigNumber(userData?.pendingReward || 0)\n\n  const blocksUntilStart = Math.max(startBlock - block, 0)\n  const blocksRemaining = Math.max(endBlock - block, 0)\n  const isOldSyrup = stakingTokenName === QuoteToken.SYRUP\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool\n  const isCardActive = isFinished && accountHasStakedBalance\n\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(tokenDecimals))\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\n      onConfirm={onStake}\n      tokenName={stakingLimit ? `${stakingTokenName} (${stakingLimit} max)` : stakingTokenName}\n    />,\n  )\n\n  const [onPresentCompound] = useModal(\n    <CompoundModal\n      earnings={earnings.multipliedBy(new BigNumber(9)).dividedBy(new BigNumber(10))}\n      onConfirm={onStake}\n      tokenName={stakingTokenName}\n    />,\n  )\n\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={stakingTokenName} />,\n  )\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, setRequestedApproval])\n\n  return (\n    <Card isActive={isCardActive} isFinished={isFinished && sousId !== 0}>\n      {isFinished && sousId !== 0 && <PoolFinishedSash />}\n      <div style={{ padding: '24px' }}>\n        <CardTitle isFinished={isFinished && sousId !== 0}>\n          {isOldSyrup && '[OLD]'} {tokenName} {TranslateString(348, 'Pool')}\n        </CardTitle>\n        <div style={{ marginBottom: '8px', display: 'flex', alignItems: 'center' }}>\n          <div style={{ flex: 1, position: 'relative' }}>\n            <Image src={`/images/tokens/${image || tokenName}Container.svg`} width={64} height={64} alt={tokenName} />\n            <RotateImage src={`/images/tokens/${image || tokenName}Token.png`} alt={`${tokenName}Token`} />\n          </div>\n          {account && harvest && !isOldSyrup && (\n            <HarvestButton\n              disabled={!earnings.toNumber() || (!milkshakeBalance && earnings.gt(milkshakeBalance)) || pendingTx}\n              text={pendingTx ? 'Collecting' : 'Harvest'}\n              onClick={async () => {\n                setPendingTx(true)\n                await onReward()\n                setPendingTx(false)\n              }}\n            />\n          )}\n        </div>\n        {!isOldSyrup ? (\n          <BalanceAndCompound>\n            <Balance\n              value={getBalanceNumber(earnings, tokenDecimals)}\n              decimals={getBalanceNumber(earnings, tokenDecimals) ? 4 : 3}\n              isDisabled={isFinished}\n            />\n            {sousId === 0 && account && harvest && (\n              <HarvestButton\n                disabled={!earnings.toNumber() || (!milkshakeBalance && earnings.gt(milkshakeBalance)) || pendingTx}\n                text={pendingTx ? TranslateString(999, 'Compounding') : TranslateString(999, 'Compound')}\n                onClick={onPresentCompound}\n              />\n            )}\n          </BalanceAndCompound>\n        ) : (\n          <OldSyrupTitle hasBalance={accountHasStakedBalance} />\n        )}\n        <Label isFinished={isFinished && sousId !== 0} text={TranslateString(330, `${tokenEarned} earned`)} />\n        <StyledCardActions>\n          {!account && <UnlockButton />}\n          {account &&\n            (needsApproval && !isOldSyrup ? (\n              <div style={{ flex: 1 }}>\n                <Button disabled={isFinished || requestedApproval} onClick={handleApprove} fullWidth>\n                  {`Approve ${stakingTokenName}`}\n                </Button>\n              </div>\n            ) : (\n              <>\n                <Button\n                  disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx}\n                  onClick={\n                    isOldSyrup\n                      ? async () => {\n                          setPendingTx(true)\n                          await onUnstake('0')\n                          setPendingTx(false)\n                        }\n                      : onPresentWithdraw\n                  }\n                >\n                  {`Unstake ${stakingTokenName}`}\n                </Button>\n                <StyledActionSpacer />\n                {!isOldSyrup && (\n                  <IconButton disabled={isFinished && sousId !== 0} onClick={onPresentDeposit}>\n                    <AddIcon color=\"background\" />\n                  </IconButton>\n                )}\n              </>\n            ))}\n        </StyledCardActions>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>{TranslateString(736, 'APR')}:</div>\n          {isFinished || isOldSyrup || !apy || apy?.isNaN() || !apy?.isFinite() ? (\n            '-'\n          ) : (\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={apy?.toNumber()} decimals={2} unit=\"%\" />\n          )}\n        </StyledDetails>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>\n            <span role=\"img\" aria-label={stakingTokenName}>\n              🍨{' '}\n            </span>\n            {TranslateString(384, 'Your Stake')}:\n          </div>\n          <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(stakedBalance)} />\n        </StyledDetails>\n      </div>\n      <CardFooter\n        projectLink={projectLink}\n        totalStaked={totalStaked}\n        blocksRemaining={blocksRemaining}\n        isFinished={isFinished}\n        blocksUntilStart={blocksUntilStart}\n        poolCategory={poolCategory}\n      />\n    </Card>\n  )\n}\n\nconst PoolFinishedSash = styled.div`\n  background-image: url('/images/pool-finished-sash.svg');\n  background-position: top right;\n  background-repeat: not-repeat;\n  height: 135px;\n  position: absolute;\n  right: -24px;\n  top: -24px;\n  width: 135px;\n`\n\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 16px 0;\n  width: 100%;\n  box-sizing: border-box;\n`\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n`\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledDetails = styled.div`\n  display: flex;\n  font-size: 14px;\n`\n\nexport default PoolCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst PoolTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {TranslateString(999, 'Active')}\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {TranslateString(999, 'Inactive')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default PoolTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 32px;\n`\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n","import React from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\nimport { BLOCKS_PER_YEAR } from 'config'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport useI18n from 'hooks/useI18n'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useFarms, usePriceBnbBusd, usePools } from 'state/hooks'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport Coming from './components/Coming'\nimport PoolCard from './components/PoolCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport Divider from './components/Divider'\n\nconst Farm: React.FC = () => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const farms = useFarms()\n  const pools = usePools(account)\n  const bnbPriceUSD = usePriceBnbBusd()\n  const block = useBlock()\n\n  const priceToBnb = (tokenName: string, tokenPrice: BigNumber, quoteToken: QuoteToken): BigNumber => {\n    const tokenPriceBN = new BigNumber(tokenPrice)\n    if (tokenName === 'BNB') {\n      return new BigNumber(1)\n    }\n    if (tokenPrice && quoteToken === QuoteToken.BUSD) {\n      return tokenPriceBN.div(bnbPriceUSD)\n    }\n    return tokenPriceBN\n  }\n\n  const poolsWithApy = pools.map((pool) => {\n    const isBnbPool = pool.poolCategory === PoolCategory.BINANCE\n    const rewardTokenFarm = farms.find((f) => f.lpSymbol === pool.tokenName)\n    const stakingTokenFarm = farms.find((s) => s.lpSymbol === pool.stakingTokenName)\n\n    // /!\\ Assume that the farm quote price is BNB\n    const stakingTokenPriceInBNB = isBnbPool ? new BigNumber(1) : new BigNumber(stakingTokenFarm?.tokenPriceVsQuote)\n    const rewardTokenPriceInBNB = priceToBnb(\n      pool.tokenName,\n      rewardTokenFarm\n        ? new BigNumber(rewardTokenFarm.poolWeight).times(rewardTokenFarm?.tokenPriceVsQuote)\n        : rewardTokenFarm?.tokenPriceVsQuote,\n      rewardTokenFarm?.quoteTokenSymbol,\n    )\n\n    const totalRewardPricePerYear = rewardTokenPriceInBNB.times(pool.tokenPerBlock).times(BLOCKS_PER_YEAR)\n    const totalStakingTokenInPool = stakingTokenPriceInBNB.times(getBalanceNumber(pool.totalStaked))\n\n    // console.log(pool.tokenName, stakingTokenPriceInBNB.toString() );\n\n    const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n\n    return {\n      ...pool,\n      isFinished: pool.sousId === 0 ? false : pool.isFinished || block > pool.endBlock,\n      apy,\n    }\n  })\n\n  const [finishedPools, openPools] = partition(poolsWithApy, (pool) => pool.isFinished)\n\n  return (\n    <Page>\n      <Hero>\n        <div>\n          <Heading as=\"h1\" size=\"xxl\" mb=\"16px\" style={{ textAlign: 'center' }}>\n            {TranslateString(282, 'VanillaIce Pool')}\n          </Heading>\n          <ul>\n            <li style={{ textAlign: 'center' }}>{TranslateString(580, 'Stake Vanilla to earn new tokens.')}</li>\n            <li style={{ textAlign: 'center' }}>{TranslateString(404, 'You can unstake at any time.')}</li>\n            <li style={{ textAlign: 'center' }}>{TranslateString(406, 'Rewards are calculated per block.')}</li>\n          </ul>\n          <Text mt=\"16px\" color=\"#452b7a\" style={{ textAlign: 'center' }}>\n            {TranslateString(9991, '🔥 FEES HARVEST: 10% TO BE BURNED 🔥')}\n          </Text>\n        </div>\n        <img src=\"/images/icecream.gif\" alt=\"SYRUP POOL icon\" width={410} height={191} />\n      </Hero>\n\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          <>\n            {orderBy(openPools, ['sortOrder']).map((pool) => (\n              <PoolCard key={pool.sousId} pool={pool} />\n            ))}\n            <Coming />\n          </>\n        </Route>\n        <Route path={`${path}/history`}>\n          {orderBy(finishedPools, ['sortOrder']).map((pool) => (\n            <PoolCard key={pool.sousId} pool={pool} />\n          ))}\n        </Route>\n      </FlexLayout>\n      <Divider />\n      <PoolTabButtons />\n    </Page>\n  )\n}\n\nconst Hero = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 300px;\n  padding: 48px 0;\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    font-size: 16px;\n    li {\n      margin-bottom: 4px;\n    }\n  }\n  img {\n    height: auto;\n    max-width: 100%;\n  }\n  @media (min-width: 576px) {\n    grid-template-columns: 1fr 1fr;\n    margin: 0;\n    max-width: none;\n  }\n`\n\nexport default Farm\n","import React, { useEffect, Suspense, lazy } from 'react'\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { ResetCSS } from '@pancakeswap-libs/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useFetchPublicData } from 'state/hooks'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport PageLoader from './components/PageLoader'\nimport Pools from './views/Pools'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page'\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst NotFound = lazy(() => import('./views/NotFound'))\n\n// This config is required for number formating\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  const { account, connect } = useWallet()\n  useEffect(() => {\n    if (!account && window.localStorage.getItem('accountStatus')) {\n      connect('injected')\n    }\n  }, [account, connect])\n\n  useFetchPublicData()\n\n  return (\n    <Router>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <Suspense fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            {/* Redirect */}\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/milk\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/milkshake\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/pool\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/stake\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </Suspense>\n      </Menu>\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import { configureStore } from '@reduxjs/toolkit'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\n\nexport default configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    farms: farmsReducer,\n    pools: poolsReducer,\n  },\n})\n","import React from 'react'\nimport { ModalProvider } from '@pancakeswap-libs/uikit'\nimport bsc, { UseWalletProvider } from '@binance-chain/bsc-use-wallet'\nimport { Provider } from 'react-redux'\nimport getRpcUrl from 'utils/getRpcUrl'\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { BlockContextProvider } from 'contexts/BlockContext'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  const rpcUrl = getRpcUrl()\n\n  return (\n    <Provider store={store}>\n      <ThemeContextProvider>\n        <LanguageContextProvider>\n          <UseWalletProvider\n            chainId={parseInt(process.env.REACT_APP_CHAIN_ID)}\n            connectors={{\n              walletconnect: { rpcUrl },\n              bsc,\n            }}\n          >\n            <BlockContextProvider>\n              <RefreshContextProvider>\n                <ModalProvider>{children}</ModalProvider>\n              </RefreshContextProvider>\n            </BlockContextProvider>\n          </UseWalletProvider>\n        </LanguageContextProvider>\n      </ThemeContextProvider>\n    </Provider>\n  )\n}\n\nexport default Providers\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import BigNumber from 'bignumber.js'\nimport { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmsPublicDataAsync, fetchPoolsPublicDataAsync, fetchPoolsUserDataAsync } from './actions'\nimport { State, Farm, Pool } from './types'\n\nconst ZERO = new BigNumber(0)\n\nexport const useFetchPublicData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync())\n    dispatch(fetchPoolsPublicDataAsync())\n  }, [dispatch, slowRefresh])\n}\n\n// Farms\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n  }\n}\n\n// Pools\n\nexport const usePools = (account): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const usePoolFromPid = (sousId): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return pool\n}\n\n// Prices\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const pid = 1 // CAKE-BNB LP\n  const bnbPriceUSD = usePriceBnbBusd()\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const pid = 3 // BUSD-BNB LP\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? new BigNumber(1).div(farm.tokenPriceVsQuote) : ZERO\n}\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`\n\nexport default ModalActions\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using our own private provider httpProver\n */\nconst getWeb3 = () => {\n  const web3 = new Web3(httpProvider)\n  return web3\n}\nconst getContract = (abi: any, address: string, contractOptions?: ContractOptions) => {\n  const web3 = getWeb3()\n  return new web3.eth.Contract((abi as unknown) as AbiItem, address, contractOptions)\n}\n\nexport { getWeb3, getContract, httpProvider }\n"],"sourceRoot":""}